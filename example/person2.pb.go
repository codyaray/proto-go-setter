// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: example/person2.proto

package person

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/confluentinc/proto-go-setter"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Person2 struct {
	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *Person2) Reset()                    { *m = Person2{} }
func (m *Person2) String() string            { return proto.CompactTextString(m) }
func (*Person2) ProtoMessage()               {}
func (*Person2) Descriptor() ([]byte, []int) { return fileDescriptorPerson2, []int{0} }

func (m *Person2) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Person2)(nil), "Person2")
}

func init() { proto.RegisterFile("example/person2.proto", fileDescriptorPerson2) }

var fileDescriptorPerson2 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4d, 0xad, 0x48, 0xcc,
	0x2d, 0xc8, 0x49, 0xd5, 0x2f, 0x48, 0x2d, 0x2a, 0xce, 0xcf, 0x33, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x97, 0x32, 0x48, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xce,
	0x4f, 0xa9, 0x4c, 0x2c, 0x4a, 0xac, 0xd4, 0x07, 0x4b, 0xe9, 0xa6, 0xe7, 0xeb, 0x16, 0xa7, 0x96,
	0x94, 0xa4, 0x16, 0xe9, 0x43, 0x28, 0x88, 0x0e, 0x25, 0x4b, 0x2e, 0xf6, 0x00, 0x88, 0x11, 0x42,
	0x22, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x4e, 0x2c, 0x3f, 0x7e, 0x69,
	0x33, 0x06, 0x31, 0x65, 0xa6, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a, 0x30, 0x29,
	0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x56, 0x2c, 0x0b, 0x7e, 0x69, 0x33, 0x3a, 0x71, 0x44, 0xb1,
	0x41, 0x6c, 0x4f, 0x62, 0x03, 0x9b, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x86, 0xaf, 0x3a,
	0xec, 0x96, 0x00, 0x00, 0x00,
}
